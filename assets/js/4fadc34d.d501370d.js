(self.webpackChunkmeta_system_docs=self.webpackChunkmeta_system_docs||[]).push([[9723],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),u=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,h=d["".concat(p,".").concat(m)]||d[m]||l[m]||i;return n?o.createElement(h,a(a({ref:t},c),{},{components:n})):o.createElement(h,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3335:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var o=n(2122),r=n(9756),i=(n(7294),n(3905)),a=["components"],s={sidebar_position:2},p="HTTP-JSON-Meta-Protocol",u={unversionedId:"our-packages/http-json",id:"our-packages/http-json",isDocsHomePage:!1,title:"HTTP-JSON-Meta-Protocol",description:"This is a protocol for HTTP JSON processing in Meta-System.",source:"@site/docs/our-packages/http-json.md",sourceDirName:"our-packages",slug:"/our-packages/http-json",permalink:"/meta-system-docs/docs/our-packages/http-json",editUrl:"https://github.com/mapikit/meta-system-docs/edit/main/docs/our-packages/http-json.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"ourPackages",previous:{title:"Our Packages",permalink:"/meta-system-docs/docs/our-packages/our-packages-intro"},next:{title:"Cronjob-Protocol",permalink:"/meta-system-docs/docs/our-packages/cronjob"}},c=[{value:"How to Configure It",id:"how-to-configure-it",children:[{value:"Each &quot;Route&quot; Object",id:"each-route-object",children:[]}]},{value:"An Example of This Configuration",id:"an-example-of-this-configuration",children:[]}],l={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"http-json-meta-protocol"},"HTTP-JSON-Meta-Protocol"),(0,i.kt)("p",null,"This is a protocol for HTTP JSON processing in Meta-System."),(0,i.kt)("h2",{id:"how-to-configure-it"},"How to Configure It"),(0,i.kt)("p",null,"Firstly, refer to the ",(0,i.kt)("a",{parentName:"p",href:"../api-docs/configuring/protocol-config"},"Protocols")," documentation section for general usage of protocols. This page contains only instructions on how the ",(0,i.kt)("inlineCode",{parentName:"p"},'"configuration"')," property of the object should be shaped like."),(0,i.kt)("p",null,"Such object, for this protocol, should contain two properties:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"port"')," - Which should be a number, specifying the port to listen to;"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"routes"')," - Which is an array of objects, representing the routes you want to bind to specific BOps.")),(0,i.kt)("h3",{id:"each-route-object"},'Each "Route" Object'),(0,i.kt)("p",null,"This object, accepts the following properties:"),(0,i.kt)("h4",{id:"route---string-required"},(0,i.kt)("inlineCode",{parentName:"h4"},'"route"')," - String (required)"),(0,i.kt)("p",null,"This is the HTTP route you want to open. It may contain URL params as: ",(0,i.kt)("inlineCode",{parentName:"p"},":<some-name>"),". You may pass this value to your BOp in the ",(0,i.kt)("inlineCode",{parentName:"p"},'"inputMapConfiguration"')," property."),(0,i.kt)("h4",{id:"businessoperation---string-required"},(0,i.kt)("inlineCode",{parentName:"h4"},'"businessOperation"')," - String (required)"),(0,i.kt)("p",null,"This property is the name of the business operation you want to call when the route is accessed."),(0,i.kt)("h4",{id:"method---enum-required"},(0,i.kt)("inlineCode",{parentName:"h4"},'"method"')," - ENUM (required)"),(0,i.kt)("p",null,"The HTTP method to be listened to. Valid values for this property are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"GET"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"POST"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"PATCH"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"PUT"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"DELETE"'))),(0,i.kt)("h4",{id:"inputmapconfiguration---array-of-objects-required"},(0,i.kt)("inlineCode",{parentName:"h4"},'"inputMapConfiguration"')," - Array of Objects (required)"),(0,i.kt)("p",null,"This property maps information on the body, headers, and URL params to be inputs of the provided BOp."),(0,i.kt)("p",null,"Each object in this Array contains three properties:  ",(0,i.kt)("inlineCode",{parentName:"p"},'"origin"'),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"originPath"')," and ",(0,i.kt)("inlineCode",{parentName:"p"},'"targetPath"'),'.\nThe "origin" can be three values: "route", "body", "headers", and "queryParams".'),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This page is still under construction.")),(0,i.kt)("h2",{id:"an-example-of-this-configuration"},"An Example of This Configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "protocols": [\n    {\n      "protocolType": "http-json-meta-protocol",\n      "configuration": {\n        "port": 8080,\n        "routes": [\n          {\n            "route": "/new-client/:clientName",\n            "businessOperation": "register",\n            "method": "POST",\n            "inputMapConfiguration": [\n              { "origin": "route", "originPath": "clientName", "targetPath": "username" },\n              { "origin": "body", "originPath": "email", "targetPath": "email" },\n              { "origin": "body", "originPath": "password", "targetPath": "password" }\n            ],\n            "resultMapConfiguration": {\n              "body": { "result": "creationResult" },\n              "headers": [],\n              "statusCode": "operationResultCode"\n            }\n          }\n        ]\n      },\n      "protocolVersion": "1.0.0"\n    }\n  ]\n}\n')))}d.isMDXComponent=!0}}]);